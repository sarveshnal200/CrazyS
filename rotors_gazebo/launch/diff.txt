<?xml version="1.0"?>

	<arg name="enable_state_estimator" default="false" />
s
	<group ns="$(arg mav_name")>
		<include file="$(find rotors_gazebo)/launch/spawn_mav_crazyflie.launch">
			<arg name="enable_state_estimator" value="$(arg enable_state_estimator)" />
		</include>
		<node if="$(eval enable_state_estimator == false)" name="position_controller_node_without_stateEstimator" pkg="rotors_control" type="position_controller_node_without_stateEstimator" output="screen">
      		<rosparam command="load" file="$(find rotors_gazebo)/resource/controller_crazyflie2.yaml" />
      		<rosparam command="load" file="$(find rotors_gazebo)/resource/$(arg mav_name).yaml" />
    	</node>
   		<node if="$(arg enable_state_estimator)" name="position_controller_node_with_stateEstimator" pkg="rotors_control" type="position_controller_node_with_stateEstimator" output="screen">
      		<rosparam command="load" file="$(find rotors_gazebo)/resource/controller_$(arg mav_name)_with_stateEstimator.yaml" />
      		<rosparam command="load" file="$(find rotors_gazebo)/resource/$(arg mav_name).yaml" />
		</node>
		<node name="quaternion_to_rpy" pkg="rotors_gazebo" type="quaternion_to_rpy" output="screen" >
       		<remap from="odometry" to="odometry_sensor1/odometry" />
    	</node>
    	<node name="position_plot" pkg="rqt_plot" type="rqt_plot" args="--clear-config /$(arg mav_name)/odometry_sensor1/odometry/pose/pose/position" output="screen" />
    	<node name="orientation_plot" pkg="rqt_plot" type="rqt_plot" args="--clear-config /$(arg mav_name)/orientation_rpy" output="screen" />
	</group> 